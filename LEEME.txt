
Programación 2 - curso 2020-2021
================================

Este curso vamos a utilizar Git y GitHub para hacer un seguimiento de tu
trabajo en las prácticas de la asignatura. Git es una herramienta para el
control de versiones de software, que se basa en la idea de tener un
repositorio en un directorio oculto (llamado .git) para guardar las diferentes 
versiones de un programa más o menos grande. Aunque es una herramienta muy
potente (pensada para el desarrollo de software en equipo), vamos a usar
solamente una mínima parte de su potencial. GitHub es una web que permite
alojar repositorios públicos o privados (en la asignatura usaremos solamente
repositorios privados), y se integra perfectamente con Git.



Primer paso (sólo hay que hacerlo una vez)
==========================================

1. Crear usuario en GitHub (https://github.com > Sign up)
  con tu email de la UA  (p.ej. xxx99@alu.ua.es), con usuario 'xxx99-ua'
  (pon tu usuario en vez de 'xxx99')

2. Crear un nuevo repositorio (New repository) privado llamado 
   p2ua-00000000 (pon tu DNI/NIE sin letras en vez de 00000000)

3. Invita a tu profesor de prácticas como colaborador:
  - Entra en el repositorio, pestaña "Settings", opción "Manage access", botón
    "Invite a collaborator"  y pon el usuario de GitHub de tu profesor para
   que GitHub le mande una invitación

4. Desde la pestaña "Code", importa el repositorio básico de la asignatura:
  - Botón "Import code"
  - En "Your old repository's close URL" pon
    https://github.com/paco-dlsi/p2-template2021.git

5. Crea una copia local de tu repositorio
  - Abre un terminal en tu ordenador y crea un directorio para tus prácticas 
   de Programación 2 (p.ej. /home/paco/p2-2021):

   $ mkdir p2-2021

  - Bájate el repositorio que has creado

   $ cd p2-2021

   $ git clone https://github.com/xxx99-ua/p2-00000000

    (donde 'xxx99' es tu email de la UA, y '00000000' tu DNI)


6. Configura el repositorio para guardar tu nombre de usuario y tu email:

   $ git config --local user.name xxx99-ua

   $ git config --local user.email xxx99@alu.ua.es


Uso normal en una sesión de trabajo
====================================

1) Al empezar a trabajar en la práctica, debes asegurarte de que tienes en
tu repositorio local la última copia (esto es especialmente importante si
trabajas en varios ordenadores)

 $ git pull 


2) Si al trabajar añades algún fichero nuevo que quieres que esté en el
repositorio, debes "avisar" a git con esta orden (que no lo añade,
simplemente avisa de que lo quieres añadir):

 $ git add ficheronuevo

3) Para ver en cualquier momento los cambios que has hecho al repositorio:

 $ git status

4) Al acabar la sesión de trabajo, o cuando hayas completado una parte
importante (o encontrado un bug difícil), sube los cambios al repositorio
con:

 $ git commit -m 'Mensaje que explica los cambios'
  
 $ git push

